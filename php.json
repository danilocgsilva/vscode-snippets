{
	// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"PHP Class Template": {
		"prefix": ["pc"],
		"body": [
			"",
			"namespace ${1:Names\\Space};",
			"",
			"class ${2:ClassName}",
			"{",
			"}",
			"",
		],
		"description": "Template for php class"
	},
	"Symfony Controller action": {
		"prefix": ["symac"],
		"body": [
			"#[Route('${1:/route/path}', name: '${2:route_name}')]",
			"public function ${3:controllerAction}(${4:Request $$request}): Response",
			"{",
			"}"
		]
	},
	"Getter method": {
		"prefix": ["get"],
		"body": [
			"public function get${1:Name}(): ${3:?string}",
			"{",
			"	return $$this->${2:name};",
			"}"
		]
	},
	"Setter method": {
		"prefix": ["set"],
		"body": [
			"public function set${1:Name}(${3:string} $${2:name}): self",
			"{",
			"    $$this->${2:name} = $${2:name};",
			"",
			"	return $$this;",
			"}"
		]
	},
	"Symfony WebTest": {
		"prefix": ["sywtest"],
		"body": [
			"declare(strict_types=1);",
			"",
			"namespace App\\Tests\\Controller;"
			"",
			"use Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;",
			"",
			"class ${1:YourClass}Test extends WebTestCase",
			"{",
			"	public function testIndex(): void",
			"	{",
			"	}"
			"}"
		]
	},
	"Symfony form template": {
		"prefix": ["symform"],
		"body": [
			"",
			"declare(strict_types=1);",
			"",
			"namespace App\\Form${0:\\Something};",
			"",
			"${1:use Some\\Namespace;}",
			"",
			"class ${2:YourEntity}Type extends AbstractType",
			"{",
			"	public function buildForm(FormBuilderInterface $$builder, array $$options): void",
			"	{",
			"		$$builder",
			"			->add('name', TextType::class)",
			"			->add('submit', SubmitType::class, [",
			"				'label' => $$options['submit_label']",
			"			])",
			"		;",
			"	}",
			"",
			"	public function configureOptions(OptionsResolver $$resolver): void",
			"	{",
			"		$$resolver->setDefaults([",
			"			'data_class' => Environment::class",
			"		]);",
			"",
			"		$$resolver->setRequired([",
			"			'submit_label'",
			"		]);",
			"	}",
			"}"
		]
	},
	"Symfony twig return from a Controller": {
		"prefix": ["srtwig"]
		"body": [
			"return $$this->render('${0:twigname}.html.twig', [",
			"	'form' => $$form,",
			"]);"
		]
	}
}
