{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Class Template": {
		"prefix": ["cjs"],
		"body": ["export default class ${1:ClassName} {\n    ${0:}\n}\n"],
		"description": "Creates a class template."
	},
	"Try catch structure": {
		"prefix": ["trc"],
		"body": [
			"try {",
			"    ",
			"} catch (e) {",
			"}"
		],
		"description": "Try catch structure"
	},
	"Error class template": {
		"prefix": ["ederr"],
		"body": [
			"export default class ${1:Error} extends Error {",
			"    constructor(message) {",
			"        super(message)",
			"    }",
			"}"
		],
		"description": "Error class template"
	},
	"Jest template file": {
		"prefix": ["jestf"],
		"body": [
			"describe('${1:Describe}', () => {",
			"  test('${2:test description}', () => {",
			"",
			"  })",
			"})"

		],
		"description": "Template for Jest file"
	},
	"Case term": {
		"prefix": "ct",
		"body": [ 
			"case \"$1\":",
			"  $2",
			"  break;"
		],
		"description": "Add a term for switch case"
	},
	"Setter": {
		"prefix": ["setter"],
		"body": [
			"set ${1:propertyName}(${1:propertyName}) {",
			"this.#${1:propertyName} = ${1:propertyName}",
			"}"
		],
		"description": "Creates a setter"
	},
	"Jest test entry": {
		"prefix": ["testj"],
		"body": [
			"test('${1:test-description}', () => {",
			"",
			"})"
		],
		"description": "Creates a setter"
	},
	"VS Code snipets template": {
		"prefix": ["vssni"],
		"body": [
			"\"${0:Snippet Name}\": {"
			"    \"prefix\": [\"${1:prefix}\"]",
			"    \"body\": []",
			"}"
		]
	}
}
